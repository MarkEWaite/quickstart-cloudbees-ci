# largely based on https://github.com/aws-quickstart/quickstart-amazon-eks/blob/master/templates/amazon-eks-nodegroup.template.yaml
AWSTemplateFormatVersion: 2010-09-09
Description: Deploys a multi-instance Spot node pool to an existing EKS Quick Start cluster (qs-1pipqrqj1)
Metadata:
  AWSAMIRegionMap:
    Filters:
      AMZNEKS115:
        name: 'amazon-eks-node-1.15-v20??????'
        owner-id: '602401143452'
      AMZNEKS115GPU:
        name: 'amazon-eks-gpu-node-1.15-v20??????'
        owner-id: '602401143452'
      AMZNEKS114:
        name: 'amazon-eks-node-1.14-v20??????'
        owner-id: '602401143452'
      AMZNEKS114GPU:
        name: 'amazon-eks-gpu-node-1.14-v20??????'
        owner-id: '602401143452'
      AMZNEKS113:
        name: 'amazon-eks-node-1.13-v20??????'
        owner-id: '602401143452'
      AMZNEKS113GPU:
        name: 'amazon-eks-gpu-node-1.13-v20??????'
        owner-id: '602401143452'
Parameters:
  KeyPairName:
    Description: The name of an existing public/private key pair, which allows you
      to securely connect to your instance after it launches
    Type: AWS::EC2::KeyPair::KeyName
  VPCID:
    Type: "AWS::EC2::VPC::Id"
  PrivateSubnet1ID:
    Type: "AWS::EC2::Subnet::Id"
  PrivateSubnet2ID:
    Type: String
    Default: ""
  PrivateSubnet3ID:
    Type: String
    Default: ""
  SpotNodeInstanceType1:
    Default: m4.large #2x8
    AllowedValues:
      - t2.small
      - t2.medium
      - t2.large
      - t2.xlarge
      - t2.2xlarge
      - t3.nano
      - t3.micro
      - t3.small
      - t3.medium
      - t3.large
      - t3.xlarge
      - t3.2xlarge
      - m3.medium
      - m3.large
      - m3.xlarge
      - m3.2xlarge
      - m4.large
      - m4.xlarge
      - m4.2xlarge
      - m4.4xlarge
      - m4.10xlarge
      - m5.large
      - m5.xlarge
      - m5.2xlarge
      - m5.4xlarge
      - m5.12xlarge
      - m5.24xlarge
      - m5.metal
      - m5d.large
      - m5d.xlarge
      - m5d.2xlarge
      - m5d.4xlarge
      - m5d.12xlarge
      - m5d.24xlarge
      - m5d.metal
      - m5a.large
      - m5a.xlarge
      - m5a.2xlarge
      - m5a.4xlarge
      - m5a.12xlarge
      - m5a.24xlarge
      - c4.large
      - c4.xlarge
      - c4.2xlarge
      - c4.4xlarge
      - c4.8xlarge
      - c5.large
      - c5.xlarge
      - c5.2xlarge
      - c5.4xlarge
      - c5.9xlarge
      - c5.18xlarge
      - i3.large
      - i3.xlarge
      - i3.2xlarge
      - i3.4xlarge
      - i3.8xlarge
      - i3.16xlarge
      - r3.xlarge
      - r3.2xlarge
      - r3.4xlarge
      - r3.8xlarge
      - r4.large
      - r4.xlarge
      - r4.2xlarge
      - r4.4xlarge
      - r4.8xlarge
      - r4.16xlarge
      - x1.16xlarge
      - x1.32xlarge
      - p2.xlarge
      - p2.8xlarge
      - p2.16xlarge
      - p3.2xlarge
      - p3.8xlarge
      - p3.16xlarge
      - r5.large
      - r5.xlarge
      - r5.2xlarge
      - r5.4xlarge
      - r5.12xlarge
      - r5.24xlarge
      - r5d.large
      - r5d.xlarge
      - r5d.2xlarge
      - r5d.4xlarge
      - r5d.12xlarge
      - r5d.24xlarge
      - z1d.large
      - z1d.xlarge
      - z1d.2xlarge
      - z1d.3xlarge
      - z1d.6xlarge
      - z1d.12xlarge
    ConstraintDescription: Must be a valid EC2 instance type
    Description: Type of EC2 instance for the Spot Node group (1 of 4)
    Type: String
  SpotNodeInstanceType2:
    Default: m5.large #2x8
    AllowedValues:
      - t2.small
      - t2.medium
      - t2.large
      - t2.xlarge
      - t2.2xlarge
      - t3.nano
      - t3.micro
      - t3.small
      - t3.medium
      - t3.large
      - t3.xlarge
      - t3.2xlarge
      - m3.medium
      - m3.large
      - m3.xlarge
      - m3.2xlarge
      - m4.large
      - m4.xlarge
      - m4.2xlarge
      - m4.4xlarge
      - m4.10xlarge
      - m5.large
      - m5.xlarge
      - m5.2xlarge
      - m5.4xlarge
      - m5.12xlarge
      - m5.24xlarge
      - m5.metal
      - m5d.large
      - m5d.xlarge
      - m5d.2xlarge
      - m5d.4xlarge
      - m5d.12xlarge
      - m5d.24xlarge
      - m5d.metal
      - m5a.large
      - m5a.xlarge
      - m5a.2xlarge
      - m5a.4xlarge
      - m5a.12xlarge
      - m5a.24xlarge
      - c4.large
      - c4.xlarge
      - c4.2xlarge
      - c4.4xlarge
      - c4.8xlarge
      - c5.large
      - c5.xlarge
      - c5.2xlarge
      - c5.4xlarge
      - c5.9xlarge
      - c5.18xlarge
      - i3.large
      - i3.xlarge
      - i3.2xlarge
      - i3.4xlarge
      - i3.8xlarge
      - i3.16xlarge
      - r3.xlarge
      - r3.2xlarge
      - r3.4xlarge
      - r3.8xlarge
      - r4.large
      - r4.xlarge
      - r4.2xlarge
      - r4.4xlarge
      - r4.8xlarge
      - r4.16xlarge
      - x1.16xlarge
      - x1.32xlarge
      - p2.xlarge
      - p2.8xlarge
      - p2.16xlarge
      - p3.2xlarge
      - p3.8xlarge
      - p3.16xlarge
      - r5.large
      - r5.xlarge
      - r5.2xlarge
      - r5.4xlarge
      - r5.12xlarge
      - r5.24xlarge
      - r5d.large
      - r5d.xlarge
      - r5d.2xlarge
      - r5d.4xlarge
      - r5d.12xlarge
      - r5d.24xlarge
      - z1d.large
      - z1d.xlarge
      - z1d.2xlarge
      - z1d.3xlarge
      - z1d.6xlarge
      - z1d.12xlarge
    ConstraintDescription: Must be a valid EC2 instance type
    Description: Type of EC2 instance for the Spot Node group (2 of 4)
    Type: String
  SpotNodeInstanceType3:
    Default: m5a.large #2x8
    AllowedValues:
      - t2.small
      - t2.medium
      - t2.large
      - t2.xlarge
      - t2.2xlarge
      - t3.nano
      - t3.micro
      - t3.small
      - t3.medium
      - t3.large
      - t3.xlarge
      - t3.2xlarge
      - m3.medium
      - m3.large
      - m3.xlarge
      - m3.2xlarge
      - m4.large
      - m4.xlarge
      - m4.2xlarge
      - m4.4xlarge
      - m4.10xlarge
      - m5.large
      - m5.xlarge
      - m5.2xlarge
      - m5.4xlarge
      - m5.12xlarge
      - m5.24xlarge
      - m5.metal
      - m5d.large
      - m5d.xlarge
      - m5d.2xlarge
      - m5d.4xlarge
      - m5d.12xlarge
      - m5d.24xlarge
      - m5d.metal
      - m5a.large
      - m5a.xlarge
      - m5a.2xlarge
      - m5a.4xlarge
      - m5a.12xlarge
      - m5a.24xlarge
      - c4.large
      - c4.xlarge
      - c4.2xlarge
      - c4.4xlarge
      - c4.8xlarge
      - c5.large
      - c5.xlarge
      - c5.2xlarge
      - c5.4xlarge
      - c5.9xlarge
      - c5.18xlarge
      - i3.large
      - i3.xlarge
      - i3.2xlarge
      - i3.4xlarge
      - i3.8xlarge
      - i3.16xlarge
      - r3.xlarge
      - r3.2xlarge
      - r3.4xlarge
      - r3.8xlarge
      - r4.large
      - r4.xlarge
      - r4.2xlarge
      - r4.4xlarge
      - r4.8xlarge
      - r4.16xlarge
      - x1.16xlarge
      - x1.32xlarge
      - p2.xlarge
      - p2.8xlarge
      - p2.16xlarge
      - p3.2xlarge
      - p3.8xlarge
      - p3.16xlarge
      - r5.large
      - r5.xlarge
      - r5.2xlarge
      - r5.4xlarge
      - r5.12xlarge
      - r5.24xlarge
      - r5d.large
      - r5d.xlarge
      - r5d.2xlarge
      - r5d.4xlarge
      - r5d.12xlarge
      - r5d.24xlarge
      - z1d.large
      - z1d.xlarge
      - z1d.2xlarge
      - z1d.3xlarge
      - z1d.6xlarge
      - z1d.12xlarge
    ConstraintDescription: Must be a valid EC2 instance type
    Description: Type of EC2 instance for the Spot Node group (3 of 4)
    Type: String
  SpotNodeInstanceType4:
    Default: m5d.large #2x8
    AllowedValues:
      - t2.small
      - t2.medium
      - t2.large
      - t2.xlarge
      - t2.2xlarge
      - t3.nano
      - t3.micro
      - t3.small
      - t3.medium
      - t3.large
      - t3.xlarge
      - t3.2xlarge
      - m3.medium
      - m3.large
      - m3.xlarge
      - m3.2xlarge
      - m4.large
      - m4.xlarge
      - m4.2xlarge
      - m4.4xlarge
      - m4.10xlarge
      - m5.large
      - m5.xlarge
      - m5.2xlarge
      - m5.4xlarge
      - m5.12xlarge
      - m5.24xlarge
      - m5.metal
      - m5d.large
      - m5d.xlarge
      - m5d.2xlarge
      - m5d.4xlarge
      - m5d.12xlarge
      - m5d.24xlarge
      - m5d.metal
      - m5a.large
      - m5a.xlarge
      - m5a.2xlarge
      - m5a.4xlarge
      - m5a.12xlarge
      - m5a.24xlarge
      - c4.large
      - c4.xlarge
      - c4.2xlarge
      - c4.4xlarge
      - c4.8xlarge
      - c5.large
      - c5.xlarge
      - c5.2xlarge
      - c5.4xlarge
      - c5.9xlarge
      - c5.18xlarge
      - i3.large
      - i3.xlarge
      - i3.2xlarge
      - i3.4xlarge
      - i3.8xlarge
      - i3.16xlarge
      - r3.xlarge
      - r3.2xlarge
      - r3.4xlarge
      - r3.8xlarge
      - r4.large
      - r4.xlarge
      - r4.2xlarge
      - r4.4xlarge
      - r4.8xlarge
      - r4.16xlarge
      - x1.16xlarge
      - x1.32xlarge
      - p2.xlarge
      - p2.8xlarge
      - p2.16xlarge
      - p3.2xlarge
      - p3.8xlarge
      - p3.16xlarge
      - r5.large
      - r5.xlarge
      - r5.2xlarge
      - r5.4xlarge
      - r5.12xlarge
      - r5.24xlarge
      - r5d.large
      - r5d.xlarge
      - r5d.2xlarge
      - r5d.4xlarge
      - r5d.12xlarge
      - r5d.24xlarge
      - z1d.large
      - z1d.xlarge
      - z1d.2xlarge
      - z1d.3xlarge
      - z1d.6xlarge
      - z1d.12xlarge
    ConstraintDescription: Must be a valid EC2 instance type
    Description: Type of EC2 instance for the Spot Node group (4 of 4)
    Type: String
  NumberOfNodes:
    Default: 3
    Description: Number of EKS node instances
    Type: Number
  NodeGroupName:
    Default: Default
    Description: Name for EKS node group
    Type: String
  NodeVolumeSize:
    Default: 20
    Description: Size for node volumes
    Type: String
  CustomAmiId:
    Type: String
  EKSControlPlane:
    Type: String
  ControlPlaneSecurityGroup:
    Type: AWS::EC2::SecurityGroup::Id
  NodeInstanceProfile:
    Type: String
  KubernetesVersion:
    Type: String
    AllowedValues: [ "1.15", "1.14", "1.13" ]
    Default: "1.15"

Conditions:
  3AZDeployment: !Not [!Equals [!Ref PrivateSubnet3ID, ""]]
  2AZDeployment: !Or
    - !Not [!Equals [!Ref PrivateSubnet2ID, ""]]
    - !Not [!Equals [!Ref PrivateSubnet3ID, ""]]
  IsSingleInstance: !Equals
    - !Ref NumberOfNodes
    - 1
  UseCustomAmi: !Not [ !Equals [ !Ref CustomAmiId, "" ] ]

Mappings:
  K8sVersionMap:
    "1.13":
      STD: AMZNEKS113
      GPU: AMZNEKS113GPU
    "1.14":
      STD: AMZNEKS114
      GPU: AMZNEKS114GPU
    "1.15":
      STD: AMZNEKS115
      GPU: AMZNEKS115GPU
  InstanceTypes:
    t2.small: { Type: STD }
    t2.medium: { Type: STD }
    t2.large: { Type: STD }
    t2.xlarge: { Type: STD }
    t2.2xlarge: { Type: STD }
    t3.nano: { Type: STD }
    t3.micro: { Type: STD }
    t3.small: { Type: STD }
    t3.medium: { Type: STD }
    t3.large: { Type: STD }
    t3.xlarge: { Type: STD }
    t3.2xlarge: { Type: STD }
    m3.medium: { Type: STD }
    m3.large: { Type: STD }
    m3.xlarge: { Type: STD }
    m3.2xlarge: { Type: STD }
    m4.large: { Type: STD }
    m4.xlarge: { Type: STD }
    m4.2xlarge: { Type: STD }
    m4.4xlarge: { Type: STD }
    m4.10xlarge: { Type: STD }
    m5.large: { Type: STD }
    m5.xlarge: { Type: STD }
    m5.2xlarge: { Type: STD }
    m5.4xlarge: { Type: STD }
    m5.12xlarge: { Type: STD }
    m5.24xlarge: { Type: STD }
    c4.large: { Type: STD }
    c4.xlarge: { Type: STD }
    c4.2xlarge: { Type: STD }
    c4.4xlarge: { Type: STD }
    c4.8xlarge: { Type: STD }
    c5.large: { Type: STD }
    c5.xlarge: { Type: STD }
    c5.2xlarge: { Type: STD }
    c5.4xlarge: { Type: STD }
    c5.9xlarge: { Type: STD }
    c5.18xlarge: { Type: STD }
    i3.large: { Type: STD }
    i3.xlarge: { Type: STD }
    i3.2xlarge: { Type: STD }
    i3.4xlarge: { Type: STD }
    i3.8xlarge: { Type: STD }
    i3.16xlarge: { Type: STD }
    r3.xlarge: { Type: STD }
    r3.2xlarge: { Type: STD }
    r3.4xlarge: { Type: STD }
    r3.8xlarge: { Type: STD }
    r4.large: { Type: STD }
    r4.xlarge: { Type: STD }
    r4.2xlarge: { Type: STD }
    r4.4xlarge: { Type: STD }
    r4.8xlarge: { Type: STD }
    r4.16xlarge: { Type: STD }
    x1.16xlarge: { Type: STD }
    x1.32xlarge: { Type: STD }
    p2.xlarge: { Type: GPU }
    p2.8xlarge: { Type: GPU }
    p2.16xlarge: { Type: GPU }
    p3.2xlarge: { Type: GPU }
    p3.8xlarge: { Type: GPU }
    p3.16xlarge: { Type: GPU }
    r5.large: { Type: STD }
    r5.xlarge: { Type: STD }
    r5.2xlarge: { Type: STD }
    r5.4xlarge: { Type: STD }
    r5.12xlarge: { Type: STD }
    r5.24xlarge: { Type: STD }
    r5d.large: { Type: STD }
    r5d.xlarge: { Type: STD }
    r5d.2xlarge: { Type: STD }
    r5d.4xlarge: { Type: STD }
    r5d.12xlarge: { Type: STD }
    r5d.24xlarge: { Type: STD }
    z1d.large: { Type: STD }
    z1d.xlarge: { Type: STD }
    z1d.2xlarge: { Type: STD }
    z1d.3xlarge: { Type: STD }
    z1d.6xlarge: { Type: STD }
    z1d.12xlarge: { Type: STD }
  AWSAMIRegionMap:
    ap-northeast-1:
      AMZNEKS115: ami-026e39e61d44ff507
      AMZNEKS115GPU: ami-093c945463034acd8
      AMZNEKS114: ami-0472f72a6affbe2cc
      AMZNEKS114GPU: ami-0665d37f861365592
      AMZNEKS113: ami-087463f05d2c49ed3
      AMZNEKS113GPU: ami-0b7f0991a89bd191c
    ap-northeast-2:
      AMZNEKS115: ami-0e1e660d5e393d5f1
      AMZNEKS115GPU: ami-04ff3d7117b9946d5
      AMZNEKS114: ami-01b6316fe22d918a9
      AMZNEKS114GPU: ami-04bd3e8bb22b81bd1
      AMZNEKS113: ami-092004fafd70c5e38
      AMZNEKS113GPU: ami-0065bbd4b85a840f4
    ap-south-1:
      AMZNEKS115: ami-040e5afd1b110a399
      AMZNEKS115GPU: ami-02b5340b229583722
      AMZNEKS114: ami-09edbbb02478906e3
      AMZNEKS114GPU: ami-07f39289712b40bd2
      AMZNEKS113: ami-06ea3235f114e1cdb
      AMZNEKS113GPU: ami-0d5d61d6ae05d7e6b
    ap-southeast-1:
      AMZNEKS115: ami-0d32de2029a9f56fd
      AMZNEKS115GPU: ami-0233b3e636baa0997
      AMZNEKS114: ami-069fad55139bcb636
      AMZNEKS114GPU: ami-0d0c244ad46219038
      AMZNEKS113: ami-04d9ba03c38df08b5
      AMZNEKS113GPU: ami-033a9ce6a9c1c756f
    ap-southeast-2:
      AMZNEKS115: ami-07aee5ce871a45bcf
      AMZNEKS115GPU: ami-0f7aee17fdeffdbc0
      AMZNEKS114: ami-0fbfeefbb99c1783d
      AMZNEKS114GPU: ami-04791e36cb138607e
      AMZNEKS113: ami-0bf9234bf8cd4eea2
      AMZNEKS113GPU: ami-07885a4b174760b28
    ca-central-1:
      AMZNEKS115: ami-0286b3b75d600924d
      AMZNEKS115GPU: ami-0a1547fc818671add
      AMZNEKS114: ami-064fd810d76e41b31
      AMZNEKS114GPU: ami-0c5dddc53103725e0
      AMZNEKS113: ami-01d73c6ce56880dd7
      AMZNEKS113GPU: ami-0b5721fda1a071339
    eu-central-1:
      AMZNEKS115: ami-02497bca9c9dbc206
      AMZNEKS115GPU: ami-05c4b8f3ef1bb1e19
      AMZNEKS114: ami-03d9393d97f5959fe
      AMZNEKS114GPU: ami-0a0a41cca69ec0aae
      AMZNEKS113: ami-00b8b203722a43adf
      AMZNEKS113GPU: ami-0ac48ef9b47499768
    eu-north-1:
      AMZNEKS115: ami-0efc0441f778f5826
      AMZNEKS115GPU: ami-03d6bc6745788f9dd
      AMZNEKS114: ami-00aa667bc61a020ac
      AMZNEKS114GPU: ami-03a41b6e4558aa4c5
      AMZNEKS113: ami-01179dbad4d43b6a4
      AMZNEKS113GPU: ami-00e2aa5149bc6ac2f
    eu-west-1:
      AMZNEKS115: ami-023736532608ff45e
      AMZNEKS115GPU: ami-07fdadd8f2bf06e82
      AMZNEKS114: ami-048d37e92ce89022e
      AMZNEKS114GPU: ami-09585e5924cde339f
      AMZNEKS113: ami-0bd1d87604aa3a367
      AMZNEKS113GPU: ami-05432b1a64feb6423
    eu-west-2:
      AMZNEKS115: ami-0a79663bf395ae44d
      AMZNEKS115GPU: ami-089fe51b1c3b5d6fd
      AMZNEKS114: ami-0a907f63b13a38029
      AMZNEKS114GPU: ami-0b155e164db9731e2
      AMZNEKS113: ami-0cfee0d573de9f673
      AMZNEKS113GPU: ami-0dc66e10b39d8ff36
    eu-west-3:
      AMZNEKS115: ami-0de67e5d090c0eef0
      AMZNEKS115GPU: ami-0c84727799ef95690
      AMZNEKS114: ami-043b0c38ebd8435f9
      AMZNEKS114GPU: ami-0473e8095f62eb9e0
      AMZNEKS113: ami-0f760dec69360c158
      AMZNEKS113GPU: ami-04981fe8fd1b08639
    sa-east-1:
      AMZNEKS115: ami-07b176b7f55c9df7c
      AMZNEKS115GPU: ami-0c344fca61b2e56af
      AMZNEKS114: ami-0fb60915ec12aac26
      AMZNEKS114GPU: ami-0828047d8af068874
      AMZNEKS113: ami-0f52e1602e8ed4e90
      AMZNEKS113GPU: ami-0e88ea382d951591c
    us-east-1:
      AMZNEKS115: ami-06d4f570358b1b626
      AMZNEKS115GPU: ami-08b20aa568bfd9034
      AMZNEKS114: ami-05e621d4ba5b28dcc
      AMZNEKS114GPU: ami-04ac5ea8ad53f0718
      AMZNEKS113: ami-08becd0d34f995483
      AMZNEKS113GPU: ami-0487c755adba013ba
    us-east-2:
      AMZNEKS115: ami-0c1bd9eca9c869a0d
      AMZNEKS115GPU: ami-09fff3605c34de565
      AMZNEKS114: ami-0b89776dcfa5f2dee
      AMZNEKS114GPU: ami-0575560bf57d243b6
      AMZNEKS113: ami-0cf9a8c09f13b04d1
      AMZNEKS113GPU: ami-0d30b440fa882e95b
    us-west-2:
      AMZNEKS115: ami-065418523a44331e5
      AMZNEKS115GPU: ami-0b408465e05e85edb
      AMZNEKS114: ami-0486134a23d903f10
      AMZNEKS114GPU: ami-02b0649372044be55
      AMZNEKS113: ami-0c42eb6db4a35a419
      AMZNEKS113GPU: ami-0cfb505d6cdd3fc67

Resources:
  NodeSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Security group for all nodes in the node group
      VpcId: !Ref VPCID
      Tags:
      - Key: !Sub "kubernetes.io/cluster/${EKSControlPlane}"
        Value: 'owned'
  NodeSecurityGroupIngress:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      Description: Allow node to communicate with each other
      GroupId: !Ref NodeSecurityGroup
      SourceSecurityGroupId: !Ref NodeSecurityGroup
      IpProtocol: '-1'
      FromPort: 0
      ToPort: 65535
  NodeSecurityGroupFromControlPlaneIngress:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      Description: Allow worker Kubelets and pods to receive communication from the cluster control plane
      GroupId: !Ref NodeSecurityGroup
      SourceSecurityGroupId: !Ref ControlPlaneSecurityGroup
      IpProtocol: tcp
      FromPort: 1025
      ToPort: 65535
  ControlPlaneEgressToNodeSecurityGroup:
    Type: AWS::EC2::SecurityGroupEgress
    Properties:
      Description: Allow the cluster control plane to communicate with worker Kubelet and pods
      GroupId: !Ref ControlPlaneSecurityGroup
      DestinationSecurityGroupId: !Ref NodeSecurityGroup
      IpProtocol: tcp
      FromPort: 1025
      ToPort: 65535
  NodeSecurityGroupFromControlPlaneOn443Ingress:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      Description: Allow pods running extension API servers on port 443 to receive communication from cluster control plane
      GroupId: !Ref NodeSecurityGroup
      SourceSecurityGroupId: !Ref ControlPlaneSecurityGroup
      IpProtocol: tcp
      FromPort: 443
      ToPort: 443
  ControlPlaneEgressToNodeSecurityGroupOn443:
    Type: AWS::EC2::SecurityGroupEgress
    Properties:
      Description: Allow the cluster control plane to communicate with pods running extension API servers on port 443
      GroupId: !Ref ControlPlaneSecurityGroup
      DestinationSecurityGroupId: !Ref NodeSecurityGroup
      IpProtocol: tcp
      FromPort: 443
      ToPort: 443
  ClusterControlPlaneSecurityGroupIngress:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      Description: Allow pods to communicate with the cluster API Server
      GroupId: !Ref ControlPlaneSecurityGroup
      SourceSecurityGroupId: !Ref NodeSecurityGroup
      IpProtocol: tcp
      ToPort: 443
      FromPort: 443
  NodeGroup:
    Type: AWS::AutoScaling::AutoScalingGroup
    Properties:
      DesiredCapacity: !Ref NumberOfNodes
      MaxSize: !Ref NumberOfNodes
      MinSize: !Ref NumberOfNodes
      Tags:
      - Key: Name
        Value: !Sub "${EKSControlPlane}-${NodeGroupName}-SpotNode"
        PropagateAtLaunch: true
      - Key: !Sub 'kubernetes.io/cluster/${EKSControlPlane}'
        Value: 'owned'
        PropagateAtLaunch: true
      - Key: k8s.io/cluster-autoscaler/enabled
        Value: 'true'
        PropagateAtLaunch: true
      - Key: !Sub 'k8s.io/cluster-autoscaler/${EKSControlPlane}'
        Value: ''
        PropagateAtLaunch: true
      VPCZoneIdentifier: !If
        - 3AZDeployment
        - [ !Ref PrivateSubnet1ID, !Ref PrivateSubnet2ID, !Ref PrivateSubnet3ID ]
        - !If
          - 2AZDeployment
          - [ !Ref PrivateSubnet1ID, !Ref PrivateSubnet2ID ]
          - [ !Ref PrivateSubnet1ID ]
      MixedInstancesPolicy:
        LaunchTemplate:
          LaunchTemplateSpecification:
            LaunchTemplateId: !Ref NodeLaunchTemplate
            Version: !GetAtt NodeLaunchTemplate.LatestVersionNumber
          Overrides:
            - InstanceType: !Ref SpotNodeInstanceType1
            - InstanceType: !Ref SpotNodeInstanceType2
            - InstanceType: !Ref SpotNodeInstanceType3
            - InstanceType: !Ref SpotNodeInstanceType4
        InstancesDistribution:
          OnDemandPercentageAboveBaseCapacity: 0 #Spot only
          SpotInstancePools: 4
    CreationPolicy:
      ResourceSignal:
        Count: !Ref NumberOfNodes
        Timeout: PT15M
    UpdatePolicy:
      AutoScalingRollingUpdate:
        MinInstancesInService: !If [IsSingleInstance, 0, 1]
        MaxBatchSize: 1
        WaitOnResourceSignals : true
        PauseTime: PT15M
  NodeLaunchTemplate:
    Type: AWS::EC2::LaunchTemplate
    Properties:
      LaunchTemplateData:
        BlockDeviceMappings:
          - DeviceName: /dev/xvda
            Ebs:
              VolumeSize: !Ref NodeVolumeSize
              VolumeType: gp2
              DeleteOnTermination: true
        IamInstanceProfile:
          Name: !Ref NodeInstanceProfile
        KeyName: !Ref KeyPairName
        NetworkInterfaces:
          - DeviceIndex: 0
            AssociatePublicIpAddress: false
            Description: String
            Groups:
              - !Ref NodeSecurityGroup
        ImageId: !If
        - UseCustomAmi
        - !Ref CustomAmiId
        - !FindInMap
          - AWSAMIRegionMap
          - !Ref "AWS::Region"
          - !FindInMap
            - K8sVersionMap
            - !Ref KubernetesVersion
            - !FindInMap
              - InstanceTypes
              - !Ref SpotNodeInstanceType1
              - Type
        InstanceType: !Ref SpotNodeInstanceType1
        UserData:
          Fn::Base64:
            !Sub |
              #!/bin/bash
              set -o xtrace
              /etc/eks/bootstrap.sh ${EKSControlPlane} --kubelet-extra-args \
                '--node-labels=partition=spot-agents \
                --register-with-taints=partition=spot-agents:NoSchedule'
              /opt/aws/bin/cfn-signal --exit-code $? \
                    --stack  ${AWS::StackName} \
                    --resource NodeGroup  \
                    --region ${AWS::Region}

Outputs:
  EKSNodeSecurityGroup:
    Value: !Ref NodeSecurityGroup
  NodeAutoScalingGroup:
    Value: !Ref NodeGroup