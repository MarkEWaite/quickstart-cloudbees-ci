# largely based on https://github.com/aws-quickstart/quickstart-amazon-eks/blob/master/templates/amazon-eks-nodegroup.template.yaml
AWSTemplateFormatVersion: 2010-09-09
Description: Deploys a multi-instance Spot node pool to an existing EKS Quick Start cluster (qs-1pipqrqj1)
Metadata:
  AWSAMIRegionMap:
    Filters:
      AMZNEKS114:
        name: 'amazon-eks-node-1.14-v20??????'
        owner-id: '602401143452'
      AMZNEKS114GPU:
        name: 'amazon-eks-gpu-node-1.14-v20??????'
        owner-id: '602401143452'
      AMZNEKS113:
        name: 'amazon-eks-node-1.13-v20??????'
        owner-id: '602401143452'
      AMZNEKS113GPU:
        name: 'amazon-eks-gpu-node-1.13-v20??????'
        owner-id: '602401143452'
      AMZNEKS112:
        name: 'amazon-eks-node-1.12-v20??????'
        owner-id: '602401143452'
      AMZNEKS112GPU:
        name: 'amazon-eks-gpu-node-1.12-v20??????'
        owner-id: '602401143452'
Parameters:
  KeyPairName:
    Description: The name of an existing public/private key pair, which allows you
      to securely connect to your instance after it launches
    Type: AWS::EC2::KeyPair::KeyName
  VPCID:
    Type: "AWS::EC2::VPC::Id"
  PrivateSubnet1ID:
    Type: "AWS::EC2::Subnet::Id"
  PrivateSubnet2ID:
    Type: "AWS::EC2::Subnet::Id"
  PrivateSubnet3ID:
    Type: "AWS::EC2::Subnet::Id"
  SpotNodeInstanceType1:
    Default: m4.large #2x8
    AllowedValues:
      - t2.small
      - t2.medium
      - t2.large
      - t2.xlarge
      - t2.2xlarge
      - t3.nano
      - t3.micro
      - t3.small
      - t3.medium
      - t3.large
      - t3.xlarge
      - t3.2xlarge
      - m3.medium
      - m3.large
      - m3.xlarge
      - m3.2xlarge
      - m4.large
      - m4.xlarge
      - m4.2xlarge
      - m4.4xlarge
      - m4.10xlarge
      - m5.large
      - m5.xlarge
      - m5.2xlarge
      - m5.4xlarge
      - m5.12xlarge
      - m5.24xlarge
      - m5.metal
      - m5d.large
      - m5d.xlarge
      - m5d.2xlarge
      - m5d.4xlarge
      - m5d.12xlarge
      - m5d.24xlarge
      - m5d.metal
      - m5a.large
      - m5a.xlarge
      - m5a.2xlarge
      - m5a.4xlarge
      - m5a.12xlarge
      - m5a.24xlarge
      - c4.large
      - c4.xlarge
      - c4.2xlarge
      - c4.4xlarge
      - c4.8xlarge
      - c5.large
      - c5.xlarge
      - c5.2xlarge
      - c5.4xlarge
      - c5.9xlarge
      - c5.18xlarge
      - i3.large
      - i3.xlarge
      - i3.2xlarge
      - i3.4xlarge
      - i3.8xlarge
      - i3.16xlarge
      - r3.xlarge
      - r3.2xlarge
      - r3.4xlarge
      - r3.8xlarge
      - r4.large
      - r4.xlarge
      - r4.2xlarge
      - r4.4xlarge
      - r4.8xlarge
      - r4.16xlarge
      - x1.16xlarge
      - x1.32xlarge
      - p2.xlarge
      - p2.8xlarge
      - p2.16xlarge
      - p3.2xlarge
      - p3.8xlarge
      - p3.16xlarge
      - r5.large
      - r5.xlarge
      - r5.2xlarge
      - r5.4xlarge
      - r5.12xlarge
      - r5.24xlarge
      - r5d.large
      - r5d.xlarge
      - r5d.2xlarge
      - r5d.4xlarge
      - r5d.12xlarge
      - r5d.24xlarge
      - z1d.large
      - z1d.xlarge
      - z1d.2xlarge
      - z1d.3xlarge
      - z1d.6xlarge
      - z1d.12xlarge
    ConstraintDescription: Must be a valid EC2 instance type
    Description: Type of EC2 instance for the Spot Node group (1 of 4)
    Type: String
  SpotNodeInstanceType2:
    Default: m5.large #2x8
    AllowedValues:
      - t2.small
      - t2.medium
      - t2.large
      - t2.xlarge
      - t2.2xlarge
      - t3.nano
      - t3.micro
      - t3.small
      - t3.medium
      - t3.large
      - t3.xlarge
      - t3.2xlarge
      - m3.medium
      - m3.large
      - m3.xlarge
      - m3.2xlarge
      - m4.large
      - m4.xlarge
      - m4.2xlarge
      - m4.4xlarge
      - m4.10xlarge
      - m5.large
      - m5.xlarge
      - m5.2xlarge
      - m5.4xlarge
      - m5.12xlarge
      - m5.24xlarge
      - m5.metal
      - m5d.large
      - m5d.xlarge
      - m5d.2xlarge
      - m5d.4xlarge
      - m5d.12xlarge
      - m5d.24xlarge
      - m5d.metal
      - m5a.large
      - m5a.xlarge
      - m5a.2xlarge
      - m5a.4xlarge
      - m5a.12xlarge
      - m5a.24xlarge
      - c4.large
      - c4.xlarge
      - c4.2xlarge
      - c4.4xlarge
      - c4.8xlarge
      - c5.large
      - c5.xlarge
      - c5.2xlarge
      - c5.4xlarge
      - c5.9xlarge
      - c5.18xlarge
      - i3.large
      - i3.xlarge
      - i3.2xlarge
      - i3.4xlarge
      - i3.8xlarge
      - i3.16xlarge
      - r3.xlarge
      - r3.2xlarge
      - r3.4xlarge
      - r3.8xlarge
      - r4.large
      - r4.xlarge
      - r4.2xlarge
      - r4.4xlarge
      - r4.8xlarge
      - r4.16xlarge
      - x1.16xlarge
      - x1.32xlarge
      - p2.xlarge
      - p2.8xlarge
      - p2.16xlarge
      - p3.2xlarge
      - p3.8xlarge
      - p3.16xlarge
      - r5.large
      - r5.xlarge
      - r5.2xlarge
      - r5.4xlarge
      - r5.12xlarge
      - r5.24xlarge
      - r5d.large
      - r5d.xlarge
      - r5d.2xlarge
      - r5d.4xlarge
      - r5d.12xlarge
      - r5d.24xlarge
      - z1d.large
      - z1d.xlarge
      - z1d.2xlarge
      - z1d.3xlarge
      - z1d.6xlarge
      - z1d.12xlarge
    ConstraintDescription: Must be a valid EC2 instance type
    Description: Type of EC2 instance for the Spot Node group (2 of 4)
    Type: String
  SpotNodeInstanceType3:
    Default: m5a.large #2x8
    AllowedValues:
      - t2.small
      - t2.medium
      - t2.large
      - t2.xlarge
      - t2.2xlarge
      - t3.nano
      - t3.micro
      - t3.small
      - t3.medium
      - t3.large
      - t3.xlarge
      - t3.2xlarge
      - m3.medium
      - m3.large
      - m3.xlarge
      - m3.2xlarge
      - m4.large
      - m4.xlarge
      - m4.2xlarge
      - m4.4xlarge
      - m4.10xlarge
      - m5.large
      - m5.xlarge
      - m5.2xlarge
      - m5.4xlarge
      - m5.12xlarge
      - m5.24xlarge
      - m5.metal
      - m5d.large
      - m5d.xlarge
      - m5d.2xlarge
      - m5d.4xlarge
      - m5d.12xlarge
      - m5d.24xlarge
      - m5d.metal
      - m5a.large
      - m5a.xlarge
      - m5a.2xlarge
      - m5a.4xlarge
      - m5a.12xlarge
      - m5a.24xlarge
      - c4.large
      - c4.xlarge
      - c4.2xlarge
      - c4.4xlarge
      - c4.8xlarge
      - c5.large
      - c5.xlarge
      - c5.2xlarge
      - c5.4xlarge
      - c5.9xlarge
      - c5.18xlarge
      - i3.large
      - i3.xlarge
      - i3.2xlarge
      - i3.4xlarge
      - i3.8xlarge
      - i3.16xlarge
      - r3.xlarge
      - r3.2xlarge
      - r3.4xlarge
      - r3.8xlarge
      - r4.large
      - r4.xlarge
      - r4.2xlarge
      - r4.4xlarge
      - r4.8xlarge
      - r4.16xlarge
      - x1.16xlarge
      - x1.32xlarge
      - p2.xlarge
      - p2.8xlarge
      - p2.16xlarge
      - p3.2xlarge
      - p3.8xlarge
      - p3.16xlarge
      - r5.large
      - r5.xlarge
      - r5.2xlarge
      - r5.4xlarge
      - r5.12xlarge
      - r5.24xlarge
      - r5d.large
      - r5d.xlarge
      - r5d.2xlarge
      - r5d.4xlarge
      - r5d.12xlarge
      - r5d.24xlarge
      - z1d.large
      - z1d.xlarge
      - z1d.2xlarge
      - z1d.3xlarge
      - z1d.6xlarge
      - z1d.12xlarge
    ConstraintDescription: Must be a valid EC2 instance type
    Description: Type of EC2 instance for the Spot Node group (3 of 4)
    Type: String
  SpotNodeInstanceType4:
    Default: m5d.large #2x8
    AllowedValues:
      - t2.small
      - t2.medium
      - t2.large
      - t2.xlarge
      - t2.2xlarge
      - t3.nano
      - t3.micro
      - t3.small
      - t3.medium
      - t3.large
      - t3.xlarge
      - t3.2xlarge
      - m3.medium
      - m3.large
      - m3.xlarge
      - m3.2xlarge
      - m4.large
      - m4.xlarge
      - m4.2xlarge
      - m4.4xlarge
      - m4.10xlarge
      - m5.large
      - m5.xlarge
      - m5.2xlarge
      - m5.4xlarge
      - m5.12xlarge
      - m5.24xlarge
      - m5.metal
      - m5d.large
      - m5d.xlarge
      - m5d.2xlarge
      - m5d.4xlarge
      - m5d.12xlarge
      - m5d.24xlarge
      - m5d.metal
      - m5a.large
      - m5a.xlarge
      - m5a.2xlarge
      - m5a.4xlarge
      - m5a.12xlarge
      - m5a.24xlarge
      - c4.large
      - c4.xlarge
      - c4.2xlarge
      - c4.4xlarge
      - c4.8xlarge
      - c5.large
      - c5.xlarge
      - c5.2xlarge
      - c5.4xlarge
      - c5.9xlarge
      - c5.18xlarge
      - i3.large
      - i3.xlarge
      - i3.2xlarge
      - i3.4xlarge
      - i3.8xlarge
      - i3.16xlarge
      - r3.xlarge
      - r3.2xlarge
      - r3.4xlarge
      - r3.8xlarge
      - r4.large
      - r4.xlarge
      - r4.2xlarge
      - r4.4xlarge
      - r4.8xlarge
      - r4.16xlarge
      - x1.16xlarge
      - x1.32xlarge
      - p2.xlarge
      - p2.8xlarge
      - p2.16xlarge
      - p3.2xlarge
      - p3.8xlarge
      - p3.16xlarge
      - r5.large
      - r5.xlarge
      - r5.2xlarge
      - r5.4xlarge
      - r5.12xlarge
      - r5.24xlarge
      - r5d.large
      - r5d.xlarge
      - r5d.2xlarge
      - r5d.4xlarge
      - r5d.12xlarge
      - r5d.24xlarge
      - z1d.large
      - z1d.xlarge
      - z1d.2xlarge
      - z1d.3xlarge
      - z1d.6xlarge
      - z1d.12xlarge
    ConstraintDescription: Must be a valid EC2 instance type
    Description: Type of EC2 instance for the Spot Node group (4 of 4)
    Type: String
  NumberOfNodes:
    Default: 3
    Description: Number of EKS node instances
    Type: Number
  NodeGroupName:
    Default: Default
    Description: Name for EKS node group
    Type: String
  NodeVolumeSize:
    Default: 20
    Description: Size for node volumes
    Type: String
  CustomAmiId:
    Type: String
  EKSControlPlane: 
    Type: String
  ControlPlaneSecurityGroup: 
    Type: AWS::EC2::SecurityGroup::Id
  NodeInstanceProfile: 
    Type: String
  KubernetesVersion: 
    Type: String
    AllowedValues: [ "1.15", "1.14", "1.13" ]
    Default: "1.15"
  
Conditions:
  IsSingleInstance: !Equals
    - !Ref NumberOfNodes
    - 1
  UseCustomAmi: !Not [ !Equals [ !Ref CustomAmiId, "" ] ]

Mappings:
  K8sVersionMap:
    "1.13":
      STD: AMZNEKS113
      GPU: AMZNEKS113GPU
    "1.14":
      STD: AMZNEKS114
      GPU: AMZNEKS114GPU
    "1.15":
      STD: AMZNEKS115
      GPU: AMZNEKS115GPU
  InstanceTypes:
    t2.small: { Type: STD }
    t2.medium: { Type: STD }
    t2.large: { Type: STD }
    t2.xlarge: { Type: STD }
    t2.2xlarge: { Type: STD }
    t3.nano: { Type: STD }
    t3.micro: { Type: STD }
    t3.small: { Type: STD }
    t3.medium: { Type: STD }
    t3.large: { Type: STD }
    t3.xlarge: { Type: STD }
    t3.2xlarge: { Type: STD }
    m3.medium: { Type: STD }
    m3.large: { Type: STD }
    m3.xlarge: { Type: STD }
    m3.2xlarge: { Type: STD }
    m4.large: { Type: STD }
    m4.xlarge: { Type: STD }
    m4.2xlarge: { Type: STD }
    m4.4xlarge: { Type: STD }
    m4.10xlarge: { Type: STD }
    m5.large: { Type: STD }
    m5.xlarge: { Type: STD }
    m5.2xlarge: { Type: STD }
    m5.4xlarge: { Type: STD }
    m5.12xlarge: { Type: STD }
    m5.24xlarge: { Type: STD }
    c4.large: { Type: STD }
    c4.xlarge: { Type: STD }
    c4.2xlarge: { Type: STD }
    c4.4xlarge: { Type: STD }
    c4.8xlarge: { Type: STD }
    c5.large: { Type: STD }
    c5.xlarge: { Type: STD }
    c5.2xlarge: { Type: STD }
    c5.4xlarge: { Type: STD }
    c5.9xlarge: { Type: STD }
    c5.18xlarge: { Type: STD }
    i3.large: { Type: STD }
    i3.xlarge: { Type: STD }
    i3.2xlarge: { Type: STD }
    i3.4xlarge: { Type: STD }
    i3.8xlarge: { Type: STD }
    i3.16xlarge: { Type: STD }
    r3.xlarge: { Type: STD }
    r3.2xlarge: { Type: STD }
    r3.4xlarge: { Type: STD }
    r3.8xlarge: { Type: STD }
    r4.large: { Type: STD }
    r4.xlarge: { Type: STD }
    r4.2xlarge: { Type: STD }
    r4.4xlarge: { Type: STD }
    r4.8xlarge: { Type: STD }
    r4.16xlarge: { Type: STD }
    x1.16xlarge: { Type: STD }
    x1.32xlarge: { Type: STD }
    p2.xlarge: { Type: GPU }
    p2.8xlarge: { Type: GPU }
    p2.16xlarge: { Type: GPU }
    p3.2xlarge: { Type: GPU }
    p3.8xlarge: { Type: GPU }
    p3.16xlarge: { Type: GPU }
    r5.large: { Type: STD }
    r5.xlarge: { Type: STD }
    r5.2xlarge: { Type: STD }
    r5.4xlarge: { Type: STD }
    r5.12xlarge: { Type: STD }
    r5.24xlarge: { Type: STD }
    r5d.large: { Type: STD }
    r5d.xlarge: { Type: STD }
    r5d.2xlarge: { Type: STD }
    r5d.4xlarge: { Type: STD }
    r5d.12xlarge: { Type: STD }
    r5d.24xlarge: { Type: STD }
    z1d.large: { Type: STD }
    z1d.xlarge: { Type: STD }
    z1d.2xlarge: { Type: STD }
    z1d.3xlarge: { Type: STD }
    z1d.6xlarge: { Type: STD }
    z1d.12xlarge: { Type: STD }
  AWSAMIRegionMap:
    ap-northeast-1:
      AMZNEKS115: ami-06abd5347585f6519
      AMZNEKS115GPU: ami-005ace3da56246b4c
      AMZNEKS114: ami-036f46d54262b5179
      AMZNEKS114GPU: ami-032cb5b350dcc63b3
      AMZNEKS113: ami-0014f8091770b85ec
      AMZNEKS113GPU: ami-069e8ff7da399bb30
    ap-northeast-2:
      AMZNEKS115: ami-065649f5fee9f227a
      AMZNEKS115GPU: ami-03e5eff906840d6b6
      AMZNEKS114: ami-0a13766bf06f0d361
      AMZNEKS114GPU: ami-0f03c98851b2a32ba
      AMZNEKS113: ami-0bb5b9f60b268245f
      AMZNEKS113GPU: ami-0045db77241f9d21f
    ap-south-1:
      AMZNEKS115: ami-0b0bc41a50e8cd33e
      AMZNEKS115GPU: ami-0ecdbf70698c1a095
      AMZNEKS114: ami-01712dedd3b75127b
      AMZNEKS114GPU: ami-058bcb62a01aff57a
      AMZNEKS113: ami-0700e3a975b098ae6
      AMZNEKS113GPU: ami-085147ec06ab3231c
    ap-southeast-1:
      AMZNEKS115: ami-08805da128ddc2ee1
      AMZNEKS115GPU: ami-0737d7d9fd508ba62
      AMZNEKS114: ami-0e9f41159c61524c3
      AMZNEKS114GPU: ami-0e8f68c6904bfb458
      AMZNEKS113: ami-09089bbfe262fcfa4
      AMZNEKS113GPU: ami-087e4f38de0b72a4f
    ap-southeast-2:
      AMZNEKS115: ami-01b5910473e0a2d61
      AMZNEKS115GPU: ami-0c46350ed213941ae
      AMZNEKS114: ami-0cff399516eece2a9
      AMZNEKS114GPU: ami-0ee609a99b160b67b
      AMZNEKS113: ami-001be96ffa9ef29fb
      AMZNEKS113GPU: ami-0f8c4ed6719464eb9
    ca-central-1:
      AMZNEKS115: ami-032ef9dea6ae46809
      AMZNEKS115GPU: ami-0438a035293831e09
      AMZNEKS114: ami-04cbc38f9488b29d2
      AMZNEKS114GPU: ami-0e47ff487cd1dfebc
      AMZNEKS113: ami-07fe93182c47b1a1d
      AMZNEKS113GPU: ami-0b6870b4dde530075
    eu-central-1:
      AMZNEKS115: ami-0c9af00bc060dfa76
      AMZNEKS115GPU: ami-0d0051b1940c49614
      AMZNEKS114: ami-04ff680b843305fef
      AMZNEKS114GPU: ami-07d5afdacabafb1f0
      AMZNEKS113: ami-09c880c71cb3541e4
      AMZNEKS113GPU: ami-03355d4c910644296
    eu-north-1:
      AMZNEKS115: ami-07739287a5dbb16d0
      AMZNEKS115GPU: ami-03784bd84a5b7597a
      AMZNEKS114: ami-0f29ff24640121046
      AMZNEKS114GPU: ami-0e400cfdeca593978
      AMZNEKS113: ami-0eb0dfebcf752ba27
      AMZNEKS113GPU: ami-036a280d2c2185640
    eu-west-1:
      AMZNEKS115: ami-04bf3ca704bd6b643
      AMZNEKS115GPU: ami-0ef15cd60131b8815
      AMZNEKS114: ami-0e2d0765fed3e9f0e
      AMZNEKS114GPU: ami-0fece54bc5fae1f43
      AMZNEKS113: ami-09da44e458cf22831
      AMZNEKS113GPU: ami-0737f55195f9bc5a8
    eu-west-2:
      AMZNEKS115: ami-0162c7f5400c6ec02
      AMZNEKS115GPU: ami-06045cca0604be109
      AMZNEKS114: ami-0aadced6ae0eb6dce
      AMZNEKS114GPU: ami-0d0b5399a68bb051d
      AMZNEKS113: ami-0ea2fbcc0fb987a66
      AMZNEKS113GPU: ami-003bb101467863c51
    eu-west-3:
      AMZNEKS115: ami-026d2ac4b345304dc
      AMZNEKS115GPU: ami-013ffc5d2524593d4
      AMZNEKS114: ami-0505a173974c9f639
      AMZNEKS114GPU: ami-018e7d98cb2553521
      AMZNEKS113: ami-0b022b84fb5b15b0d
      AMZNEKS113GPU: ami-0ebf563a44a1b35cf
    sa-east-1:
      AMZNEKS115: ami-0fee705e85dc3ac2c
      AMZNEKS115GPU: ami-0c03b210503cbd9cc
      AMZNEKS114: ami-00cc2b43dbede4da1
      AMZNEKS114GPU: ami-0e9559e3b200fb118
      AMZNEKS113: ami-05f0cffea79b5e9d4
      AMZNEKS113GPU: ami-05c64ada6d8aff523
    us-east-1:
      AMZNEKS115: ami-0582e4c984a1e848a
      AMZNEKS115GPU: ami-048e6f7f616f9d59f
      AMZNEKS114: ami-08ac00d99a673bad0
      AMZNEKS114GPU: ami-000dbfddbb743f0a3
      AMZNEKS113: ami-0973bc1f558f5def1
      AMZNEKS113GPU: ami-01158e6d905c5ed46
    us-east-2:
      AMZNEKS115: ami-08880278b3cac5832
      AMZNEKS115GPU: ami-03e135b1fb3ca2634
      AMZNEKS114: ami-00ec371f33c240b7a
      AMZNEKS114GPU: ami-07b7a091f982c2200
      AMZNEKS113: ami-0614f930c2ae2d950
      AMZNEKS113GPU: ami-0260aacd33fb3e443
    us-west-2:
      AMZNEKS115: ami-000a48e69e7695a4a
      AMZNEKS115GPU: ami-039e96d066cf2418c
      AMZNEKS114: ami-0907724389e8705d9
      AMZNEKS114GPU: ami-074dd2e81e1575515
      AMZNEKS113: ami-03f76b4d810c4f280
      AMZNEKS113GPU: ami-00338fcd054490543

Resources:
  NodeSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Security group for all nodes in the node group
      VpcId: !Ref VPCID
      Tags:
      - Key: !Sub "kubernetes.io/cluster/${EKSControlPlane}"
        Value: 'owned'
  NodeSecurityGroupIngress:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      Description: Allow node to communicate with each other
      GroupId: !Ref NodeSecurityGroup
      SourceSecurityGroupId: !Ref NodeSecurityGroup
      IpProtocol: '-1'
      FromPort: 0
      ToPort: 65535
  NodeSecurityGroupFromControlPlaneIngress:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      Description: Allow worker Kubelets and pods to receive communication from the cluster control plane
      GroupId: !Ref NodeSecurityGroup
      SourceSecurityGroupId: !Ref ControlPlaneSecurityGroup
      IpProtocol: tcp
      FromPort: 1025
      ToPort: 65535
  ControlPlaneEgressToNodeSecurityGroup:
    Type: AWS::EC2::SecurityGroupEgress
    Properties:
      Description: Allow the cluster control plane to communicate with worker Kubelet and pods
      GroupId: !Ref ControlPlaneSecurityGroup
      DestinationSecurityGroupId: !Ref NodeSecurityGroup
      IpProtocol: tcp
      FromPort: 1025
      ToPort: 65535
  NodeSecurityGroupFromControlPlaneOn443Ingress:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      Description: Allow pods running extension API servers on port 443 to receive communication from cluster control plane
      GroupId: !Ref NodeSecurityGroup
      SourceSecurityGroupId: !Ref ControlPlaneSecurityGroup
      IpProtocol: tcp
      FromPort: 443
      ToPort: 443
  ControlPlaneEgressToNodeSecurityGroupOn443:
    Type: AWS::EC2::SecurityGroupEgress
    Properties:
      Description: Allow the cluster control plane to communicate with pods running extension API servers on port 443
      GroupId: !Ref ControlPlaneSecurityGroup
      DestinationSecurityGroupId: !Ref NodeSecurityGroup
      IpProtocol: tcp
      FromPort: 443
      ToPort: 443
  ClusterControlPlaneSecurityGroupIngress:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      Description: Allow pods to communicate with the cluster API Server
      GroupId: !Ref ControlPlaneSecurityGroup
      SourceSecurityGroupId: !Ref NodeSecurityGroup
      IpProtocol: tcp
      ToPort: 443
      FromPort: 443
  NodeGroup:
    Type: AWS::AutoScaling::AutoScalingGroup
    Properties:
      DesiredCapacity: !Ref NumberOfNodes
      MaxSize: !Ref NumberOfNodes
      MinSize: !Ref NumberOfNodes
      Tags:
      - Key: Name
        Value: !Sub "${EKSControlPlane}-${NodeGroupName}-SpotNode"
        PropagateAtLaunch: true
      - Key: !Sub 'kubernetes.io/cluster/${EKSControlPlane}'
        Value: 'owned'
        PropagateAtLaunch: true
      - Key: k8s.io/cluster-autoscaler/enabled
        Value: 'true'
        PropagateAtLaunch: true
      - Key: !Sub 'k8s.io/cluster-autoscaler/${EKSControlPlane}'
        Value: ''
        PropagateAtLaunch: true
      VPCZoneIdentifier: [ !Ref PrivateSubnet1ID, !Ref PrivateSubnet2ID, !Ref PrivateSubnet3ID ]
      MixedInstancesPolicy: 
        LaunchTemplate:
          LaunchTemplateSpecification:
            LaunchTemplateId: !Ref NodeLaunchTemplate
            Version: !GetAtt NodeLaunchTemplate.LatestVersionNumber
          Overrides:
            - InstanceType: !Ref SpotNodeInstanceType1
            - InstanceType: !Ref SpotNodeInstanceType2
            - InstanceType: !Ref SpotNodeInstanceType3
            - InstanceType: !Ref SpotNodeInstanceType4
        InstancesDistribution:
          OnDemandPercentageAboveBaseCapacity: 0 #Spot only
          SpotInstancePools: 4
    UpdatePolicy:
      AutoScalingRollingUpdate:
        MinInstancesInService: !If [IsSingleInstance, 0, 1]
        MaxBatchSize: 1
        WaitOnResourceSignals : true
        PauseTime: PT15M
  NodeLaunchTemplate:
    Type: AWS::EC2::LaunchTemplate
    Properties:
      LaunchTemplateData:
        BlockDeviceMappings: 
          - DeviceName: /dev/xvda
            Ebs:
              VolumeSize: !Ref NodeVolumeSize
              VolumeType: gp2
              DeleteOnTermination: true
        IamInstanceProfile: 
          Name: !Ref NodeInstanceProfile
        KeyName: !Ref KeyPairName
        NetworkInterfaces: 
          - DeviceIndex: 0
            AssociatePublicIpAddress: false
            Description: String
            Groups: 
              - !Ref NodeSecurityGroup
        ImageId: !If
        - UseCustomAmi
        - !Ref CustomAmiId
        - !FindInMap
          - AWSAMIRegionMap
          - !Ref "AWS::Region"
          - !FindInMap
            - K8sVersionMap
            - !Ref KubernetesVersion
            - !FindInMap
              - InstanceTypes
              - !Ref SpotNodeInstanceType1
              - Type
        InstanceType: !Ref SpotNodeInstanceType1
        UserData: 
          Fn::Base64:
            !Sub |
              #!/bin/bash
              set -o xtrace
              /etc/eks/bootstrap.sh ${EKSControlPlane} --kubelet-extra-args \
                '--node-labels=partition=spot-agents \
                --register-with-taints=partition=spot-agents:NoSchedule' \
              /opt/aws/bin/cfn-signal --exit-code $? \
                    --stack  ${AWS::StackName} \
                    --resource NodeGroup  \
                    --region ${AWS::Region}

Outputs:
  EKSNodeSecurityGroup:
    Value: !Ref NodeSecurityGroup
  NodeAutoScalingGroup:
    Value: !Ref NodeGroup